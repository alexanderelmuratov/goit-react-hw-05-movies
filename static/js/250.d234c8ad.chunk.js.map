{"version":3,"file":"static/js/250.d234c8ad.chunk.js","mappings":"gMAEaA,E,QAAgBC,GAAAA,IAAH,sE,SCCbC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CAAcG,MAAM,UAAUC,OAAQ,GAAIC,MAAO,S,8KCJ1CC,EAAaL,EAAAA,GAAAA,GAAH,kSAYVM,EAAeN,EAAAA,GAAAA,EAAH,8GAOZO,EAAkBP,EAAAA,GAAAA,EAAH,0HAOfQ,EAAaR,EAAAA,GAAAA,EAAH,qI,mBCrBVS,EAAU,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,6FACnBJ,GAAW,GADQ,mBAGSK,EAAAA,EAAAA,IAAgBX,GAHzB,mBAIM,KADfY,EAHS,EAGTA,SACIC,OAJK,yCAKRC,EAAAA,GAAAA,KAAW,uCALH,OAOjBV,EAAWQ,GAPM,kDASjBJ,EAAS,EAAD,IACRM,EAAAA,GAAAA,MAAY,gCAVK,yBAYjBR,GAAW,GAZM,6EAAH,qDAelBI,MACC,CAACV,KAGF,gCACGK,IAAW,SAACd,EAAA,EAAD,KACVgB,GAASJ,IACT,wBACGA,EAAQY,KAAI,SAAAC,GAAM,OACjB,UAACrB,EAAD,YACE,UAACC,EAAD,sBAAuBoB,EAAOC,WAC9B,UAACpB,EAAD,yBAA6B,IAAIqB,KAAKF,EAAOG,YAAYC,mBACzD,SAACtB,EAAD,UAAakB,EAAOK,YAHLL,EAAOM,c,0MCpCpCC,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,IAAAA,IAAA,sCAAyCC,IADjC,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAe,mCAAG,WAAOC,GAAP,uFACNN,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDK,IAD9C,cACvBH,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfG,EAAe,mCAAG,WAAO9B,GAAP,uFACNuB,IAAAA,IAAA,iBAAoBvB,EAApB,oBAAuCwB,IADjC,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfI,EAAY,mCAAG,WAAO/B,GAAP,uFACHuB,IAAAA,IAAA,iBAAoBvB,EAApB,4BAA+CwB,IAD5C,cACpBE,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZhB,EAAe,mCAAG,WAAOX,GAAP,uFACNuB,IAAAA,IAAA,iBAAoBvB,EAApB,4BAA+CwB,IADzC,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Reviews/Rewiews.styled.jsx","components/Reviews/Reviews.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { MutatingDots } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <MutatingDots color=\"#00BFFF\" height={80} width={80} />\n    </LoaderWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const ReviewItem = styled.li`\n  padding: 10px;\n  background-color: #fff;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  \n    &:not(:last-child) {\n    margin-bottom: 30px;    \n  }  \n`;\n\nexport const ReviewAuthor = styled.p`\n  margin-bottom: 10px;\n  font-weight: 500;  \n  font-size: 14px;\n  color: #2a363b;\n`;\n\nexport const ReviewPublished = styled.p`\n  margin-bottom: 10px;\n  font-weight: 400;  \n  font-size: 12px;\n  color: rgba(128, 128, 128);\n`;\n\nexport const ReviewText = styled.p`  \n  text-indent: 20px;\n  font-style: italic;\n  font-weight: 400;  \n  font-size: 14px;\n  color: #2a363b;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\nimport { ReviewItem, ReviewAuthor, ReviewPublished, ReviewText } from './Rewiews.styled';\nimport { getMovieReviews } from 'services/moviesApi';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      setLoading(true);\n      try {\n        const { results } = await getMovieReviews(movieId);\n        if (results.length === 0) {\n          return toast.info('We have no rewievs for this movie!');\n        }\n        setReviews(results);\n      } catch (error) {\n        setError(error);\n        toast.error('Oops!...Something went wrong');\n      } finally {\n        setLoading(false);\n      }      \n    };\n    fetchReviews();\n  }, [movieId]);  \n\n  return (\n    <>\n      {loading && <Loader />}\n      {!error && reviews && (\n        <ul>\n          {reviews.map(review => (\n            <ReviewItem key={review.id}>\n              <ReviewAuthor>Author: {review.author}</ReviewAuthor>\n              <ReviewPublished>Published: {new Date(review.created_at).toDateString()}</ReviewPublished>\n              <ReviewText>{review.content}</ReviewText>              \n            </ReviewItem>\n          ))}\n        </ul>\n      )}  \n    </>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b4f947b22bfa1d671304279be6575e1f';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getSearchMovies = async (query) => {\n  const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCast = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\n\n// ================================\n// список самых популярных фильмов на сегодня для создания коллекции на главной странице\n// https://api.themoviedb.org/3/trending/movie/week?api_key=b4f947b22bfa1d671304279be6575e1f\n\n// поиск кинофильма по ключевому слову на странице фильмов\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&query=query&page=1\n\n// запрос полной информации о фильме для страницы кинофильма\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>\n\n// запрос информации о актёрском составе для страницы кинофильма\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>\n\n// запрос обзоров для страницы кинофильма\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1"],"names":["LoaderWrapper","styled","Loader","color","height","width","ReviewItem","ReviewAuthor","ReviewPublished","ReviewText","Reviews","movieId","useParams","useState","reviews","setReviews","loading","setLoading","error","setError","useEffect","fetchReviews","getMovieReviews","results","length","toast","map","review","author","Date","created_at","toDateString","content","id","axios","API_KEY","getTrendingMovies","response","data","getSearchMovies","query","getMovieDetails","getMovieCast"],"sourceRoot":""}