{"version":3,"file":"static/js/349.60fcb39b.chunk.js","mappings":"gMAEaA,E,QAAgBC,GAAAA,IAAH,sE,SCCbC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CAAcG,MAAM,UAAUC,OAAQ,GAAIC,MAAO,S,+GCH1CC,EAAaL,EAAAA,GAAAA,GAAH,uIAQVM,EAAiBN,EAAAA,GAAAA,GAAH,qEAKdO,GAAaP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,0N,SCXVS,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACR,EAAD,WACE,UAACC,EAAD,CAAYQ,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAtD,WACE,SAAC,MAAD,CAAaQ,MAAO,CAAEf,MAAO,GAAID,OAAQ,GAAIiB,YAAa,UACzDN,EAAMO,UAHUP,EAAME,W,8KCRtBM,EAAatB,EAAAA,GAAAA,KAAH,0PAYVuB,EAAevB,EAAAA,GAAAA,OAAH,wQAgBZwB,EAAcxB,EAAAA,GAAAA,MAAH,8Q,SCxBXyB,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAeA,OACE,8BACE,UAACP,EAAD,CAAYI,SAXK,SAAAI,GAEnB,GADAA,EAAMC,iBACe,KAAjBH,EAAMI,OACR,OAAOC,EAAAA,GAAAA,KAAW,oCAEpBP,EAASE,GACTC,EAAS,KAKP,WACE,SAACL,EAAD,CACEU,KAAK,OACLC,KAAK,QACLC,MAAOR,EACPS,SApBa,SAAAP,GACnBD,EAASC,EAAMQ,cAAcF,MAAMG,gBAoB7BC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,SAACnB,EAAD,CAAcW,KAAK,SAAnB,UACE,SAAC,MAAD,CAAUf,MAAO,CAAEf,MAAO,GAAID,OAAQ,c,wCC1BnCwC,EAAa,WACxB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BnB,EAAAA,EAAAA,UAASkB,EAAaE,IAAI,UAApD,eAAOnB,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAesC,EAAf,KACA,GAA8BrB,EAAAA,EAAAA,WAAS,GAAvC,eAAOsB,EAAP,KAAgBC,EAAhB,KACA,GAA0BvB,EAAAA,EAAAA,UAAS,MAAnC,eAAOwB,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAKzB,EAAL,CAEA,IAAM0B,EAAW,mCAAG,6FAClBJ,GAAW,GADO,mBAGUK,EAAAA,EAAAA,IAAgB3B,GAH1B,mBAIO,KADf4B,EAHQ,EAGRA,SACIC,OAJI,yCAKPxB,EAAAA,GAAAA,MAAY,kDALL,OAOhBe,EAAUQ,GACVE,QAAQC,IAAIH,GARI,kDAUhBJ,EAAS,EAAD,IACRnB,EAAAA,GAAAA,MAAY,gCAXI,yBAahBiB,GAAW,GAbK,6EAAH,qDAgBjBI,OACC,CAAC1B,IAUJ,OACE,iCACE,SAAC,IAAD,8BACA,SAACH,EAAD,CAAWC,SAXM,SAAAkC,GACfA,IAAgBhC,IACpBkB,EAAgB,CAAClB,MAAOgC,IACxB/B,EAAS+B,GACTZ,EAAU,IACVI,EAAS,UAONH,IAAW,SAAChD,EAAA,EAAD,KACVkD,GAA2B,IAAlBzC,EAAO+C,SAAgB,SAAChD,EAAA,EAAD,CAAYC,OAAQA,S,0MCjD5DmD,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,IAAAA,IAAA,sCAAyCC,IADjC,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBV,EAAe,mCAAG,WAAO3B,GAAP,uFACNiC,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDlC,IAD9C,cACvBoC,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfC,EAAe,mCAAG,WAAOC,GAAP,uFACNN,IAAAA,IAAA,iBAAoBM,EAApB,oBAAuCL,IADjC,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfG,EAAY,mCAAG,WAAOD,GAAP,uFACHN,IAAAA,IAAA,iBAAoBM,EAApB,4BAA+CL,IAD5C,cACpBE,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZI,EAAe,mCAAG,WAAOF,GAAP,uFACNN,IAAAA,IAAA,iBAAoBM,EAApB,4BAA+CL,IADzC,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Searhbar/Searchbar.styled.jsx","components/Searhbar/Searchbar.jsx","pages/MoviesPage.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { MutatingDots } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <MutatingDots color=\"#00BFFF\" height={80} width={80} />\n    </LoaderWrapper>\n  );\n};\n","import { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  margin: 0 auto;\n  margin-top: 15px;\n  display: flex;\n  flex-direction: column;\n  align-items: baseline;\n`;\n\nexport const StyledListItem = styled.li`\n  padding-top: 5px;\n  padding-bottom: 5px;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  font-style: italic;\n  font-weight: 400;  \n  font-size: 18px;\n  color: #2a363b;\n  text-decoration: none;\n\n  &:hover {\n    color: #ff6b01;\n  }\n`;\n","import { useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { GiFilmSpool } from 'react-icons/gi';\nimport { StyledList, StyledListItem, StyledLink } from \"./MoviesList.styled\";\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <StyledList>\n      {movies.map(movie => (\n        <StyledListItem key={movie.id}>\n          <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            <GiFilmSpool style={{ width: 15, height: 15, marginRight: '10px'}} />\n            {movie.title}\n          </StyledLink>\n        </StyledListItem>\n      ))}\n    </StyledList>    \n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 400px;\n  margin-top: 20px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n`;\n\nexport const SearchButton = styled.button`\n  display: flex;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n  border: 0;\n  opacity: 0.6;\n  cursor: pointer;\n  outline: none;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  height: 40px;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { GoSearch } from 'react-icons/go';\nimport { toast } from 'react-toastify';\nimport { SearchForm, SearchButton, SearchInput } from './Searchbar.styled';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (query.trim() === '') {\n      return toast.warn('Please fill in the search field!');\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <section>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchInput\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          onChange={handleChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <SearchButton type=\"submit\">\n          <GoSearch style={{ width: 30, height: 30 }} />\n        </SearchButton>        \n      </SearchForm>\n    </section>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Searchbar } from 'components/Searhbar/Searchbar';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { PageTitle } from 'components/App/App.styled';\nimport { getSearchMovies } from 'services/moviesApi';\n\nexport const MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(searchParams.get('query'));\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);  \n\n  useEffect(() => {\n    if (!query) return;\n\n    const fetchMovies = async () => {\n      setLoading(true);\n      try {\n        const { results } = await getSearchMovies(query);\n        if (results.length === 0) {\n          return toast.error('Sorry, there are no movies. Please try again!');\n        }\n        setMovies(results);\n        console.log(results);\n      } catch (error) {\n        setError(error);\n        toast.error('Oops!...Something went wrong');\n      } finally {\n        setLoading(false);\n      }      \n    };\n    fetchMovies();\n  }, [query]);\n\n  const handleSearch = searchQuery => {\n    if (searchQuery === query) return;\n    setSearchParams({query: searchQuery});\n    setQuery(searchQuery);  \n    setMovies([]);\n    setError(null);\n  };\n\n  return (\n    <>\n      <PageTitle>Find you movie</PageTitle>      \n      <Searchbar onSubmit={handleSearch} />\n      {loading && <Loader />}\n      {!error && movies.length !== 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b4f947b22bfa1d671304279be6575e1f';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getSearchMovies = async (query) => {\n  const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCast = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\n\n// ================================\n// список самых популярных фильмов на сегодня для создания коллекции на главной странице\n// https://api.themoviedb.org/3/trending/movie/week?api_key=b4f947b22bfa1d671304279be6575e1f\n\n// поиск кинофильма по ключевому слову на странице фильмов\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&query=query&page=1\n\n// запрос полной информации о фильме для страницы кинофильма\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>\n\n// запрос информации о актёрском составе для страницы кинофильма\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>\n\n// запрос обзоров для страницы кинофильма\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1"],"names":["LoaderWrapper","styled","Loader","color","height","width","StyledList","StyledListItem","StyledLink","Link","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","style","marginRight","title","SearchForm","SearchButton","SearchInput","Searchbar","onSubmit","useState","query","setQuery","event","preventDefault","trim","toast","type","name","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","MoviesPage","useSearchParams","searchParams","setSearchParams","get","setMovies","loading","setLoading","error","setError","useEffect","fetchMovies","getSearchMovies","results","length","console","log","searchQuery","axios","API_KEY","getTrendingMovies","response","data","getMovieDetails","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}