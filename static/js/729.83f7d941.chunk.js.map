{"version":3,"file":"static/js/729.83f7d941.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/GoBackLink/GoBackLink.styled.jsx","components/GoBackLink/GoBackLink.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/MovieAddInfo/MovieAddInfo.styled.jsx","components/MovieAddInfo/MovieAddInfo.jsx","pages/MovieDetailsPage.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { MutatingDots } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <MutatingDots color=\"#00BFFF\" height={80} width={80} />\n    </LoaderWrapper>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from \"styled-components\";\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n  font-weight: 400;  \n  font-size: 18px;\n  color: #2a363b;\n  text-decoration: none;\n\n  &:hover {\n    color: #ff6b01;\n  }\n`;\n","import { useLocation } from \"react-router-dom\";\nimport { TiArrowBack } from 'react-icons/ti';\nimport { StyledLink } from \"./GoBackLink.styled\";\n\nexport const GoBackLink = () => {\n  const location = useLocation();\n  return (\n    <StyledLink to={location?.state?.from ?? '/movies'}>\n      <TiArrowBack style={{ width: 30, height: 30, marginRight: '5px' }} />\n      Go back\n    </StyledLink>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const MovieCard = styled.div`\n  display: flex;\n  margin-bottom: 15px;\n`;\n\nexport const MovieImage = styled.img`\n  width: 200px;\n  margin-right: 20px;\n`;\n\nexport const MovieText = styled.p`\n  margin-top: 5px;\n\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }  \n`;\n","import PropTypes from 'prop-types';\nimport { PageTitle } from \"components/App/App.styled\";\nimport { MovieCard, MovieImage, MovieText } from \"./MovieInfo.styled\";\n\nexport const MovieInfo = ({ movie }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } = movie;\n  return (    \n    <div>\n      \n      <MovieCard>\n        <MovieImage src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt={title} />\n        <div>  \n          <PageTitle>{`${title} (${release_date.slice(0, 4)})`}</PageTitle>\n          <MovieText>{`User score: ${vote_average * 10}%`}</MovieText>\n          <h2>Overview</h2>\n          <MovieText>{overview}</MovieText>\n          <h3>Genres</h3>\n          <MovieText>{genres.map(genre => genre.name).join(', ')}</MovieText>\n        </div>\n      </MovieCard>\n    </div>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.node.isRequired,\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from \"styled-components\";\n\nexport const AddInfoList = styled.ul`\n  display: flex;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const AddInfoItem = styled.li`\n  &:not(:last-child) {\n    margin-right: 20px;\n  }  \n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  font-weight: 400;  \n  font-size: 18px;\n  color: #2a363b;\n  text-decoration: none;\n\n  &.active {\n    color: #ff6b01;\n  }\n`;\n","import { Outlet, useLocation } from 'react-router-dom';\nimport { TiArrowDown } from 'react-icons/ti';\nimport { AddInfoList, AddInfoItem, StyledNavLink } from './MovieAddInfo.styled';\n\nexport const MovieAddInfo = () => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <h2>Additional information</h2>\n      <AddInfoList>\n        <AddInfoItem>\n          <StyledNavLink to=\"cast\" state={{ from: location?.state?.from }}>\n            <TiArrowDown style={{ width: 30, height: 30 }} />\n            Cast\n          </StyledNavLink>\n        </AddInfoItem>\n        <AddInfoItem>\n          <StyledNavLink to=\"reviews\" state={{ from: location?.state?.from }}>\n            <TiArrowDown style={{ width: 30, height: 30 }} />\n            Reviews\n          </StyledNavLink>\n        </AddInfoItem>\n      </AddInfoList>\n      <Outlet />\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\nimport { GoBackLink } from 'components/GoBackLink/GoBackLink';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { MovieAddInfo } from 'components/MovieAddInfo/MovieAddInfo';\nimport { getMovieDetails } from 'services/moviesApi';\n\nexport const MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      setLoading(true);\n      try {\n        const movie = await getMovieDetails(movieId);\n        setMovie(movie);\n      } catch (error) {\n        setError(error);\n        toast.error('Oops!...Something went wrong');\n      } finally {\n        setLoading(false);\n      }      \n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {!error && movie && (\n        <>\n          <GoBackLink />\n          <MovieInfo movie={movie} />          \n          <MovieAddInfo />\n        </>\n      )}\n    </>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b4f947b22bfa1d671304279be6575e1f';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getSearchMovies = async (query) => {\n  const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCast = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\n\n// ================================\n// список самых популярных фильмов на сегодня для создания коллекции на главной странице\n// https://api.themoviedb.org/3/trending/movie/week?api_key=b4f947b22bfa1d671304279be6575e1f\n\n// поиск кинофильма по ключевому слову на странице фильмов\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&query=query&page=1\n\n// запрос полной информации о фильме для страницы кинофильма\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>\n\n// запрос информации о актёрском составе для страницы кинофильма\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>\n\n// запрос обзоров для страницы кинофильма\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1"],"names":["LoaderWrapper","styled","Loader","color","height","width","StyledLink","Link","GoBackLink","location","useLocation","to","state","from","style","marginRight","MovieCard","MovieImage","MovieText","MovieInfo","movie","poster_path","title","release_date","vote_average","overview","genres","src","alt","slice","map","genre","name","join","AddInfoList","AddInfoItem","StyledNavLink","NavLink","MovieAddInfo","MovieDetailsPage","movieId","useParams","useState","setMovie","loading","setLoading","error","setError","useEffect","fetchMovieDetails","getMovieDetails","toast","axios","API_KEY","getTrendingMovies","response","data","getSearchMovies","query","getMovieCast","getMovieReviews"],"sourceRoot":""}