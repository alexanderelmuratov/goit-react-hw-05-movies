{"version":3,"file":"static/js/983.67225a8b.chunk.js","mappings":"gMAEaA,E,QAAgBC,GAAAA,IAAH,sE,SCCbC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CAAcG,MAAM,UAAUC,OAAQ,GAAIC,MAAO,S,+GCH1CC,EAAaL,EAAAA,GAAAA,GAAH,uIAQVM,EAAiBN,EAAAA,GAAAA,GAAH,qEAKdO,GAAaP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,0N,SCXVS,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACR,EAAD,WACE,UAACC,EAAD,CAAYQ,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAtD,WACE,SAAC,MAAD,CAAaQ,MAAO,CAAEf,MAAO,GAAID,OAAQ,GAAIiB,YAAa,UACzDN,EAAMO,UAHUP,EAAME,W,iLCHtBM,EAAW,WACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,6FAClBJ,GAAW,GADO,mBAGUK,EAAAA,EAAAA,MAHV,gBAGRC,EAHQ,EAGRA,QACRR,EAAUQ,GAJM,gDAMhBJ,EAAS,EAAD,IACRK,EAAAA,GAAAA,MAAY,gCAPI,yBAShBP,GAAW,GATK,4EAAH,qDAYjBI,MACC,KAGD,iCACE,SAAC,IAAD,6BACCL,IAAW,SAAC,IAAD,KACVE,GAA2B,IAAlBjB,EAAOwB,SAAgB,SAAC,IAAD,CAAYxB,OAAQA,S,0MC9B5DyB,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHL,EAAiB,mCAAG,oGACRI,IAAAA,IAAA,sCAAyCC,IADjC,cACzBC,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAe,mCAAG,WAAOC,GAAP,uFACNL,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDI,IAD9C,cACvBH,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfG,EAAe,mCAAG,WAAOC,GAAP,uFACNP,IAAAA,IAAA,iBAAoBO,EAApB,oBAAuCN,IADjC,cACvBC,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfK,EAAY,mCAAG,WAAOD,GAAP,uFACHP,IAAAA,IAAA,iBAAoBO,EAApB,4BAA+CN,IAD5C,cACpBC,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZM,EAAe,mCAAG,WAAOF,GAAP,uFACNP,IAAAA,IAAA,iBAAoBO,EAApB,4BAA+CN,IADzC,cACvBC,EADuB,yBAEtBA,EAASC,MAFa,2CAAH","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { MutatingDots } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <MutatingDots color=\"#00BFFF\" height={80} width={80} />\n    </LoaderWrapper>\n  );\n};\n","import { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  margin: 0 auto;\n  margin-top: 15px;\n  display: flex;\n  flex-direction: column;\n  align-items: baseline;\n`;\n\nexport const StyledListItem = styled.li`\n  padding-top: 5px;\n  padding-bottom: 5px;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  font-style: italic;\n  font-weight: 400;  \n  font-size: 18px;\n  color: #2a363b;\n  text-decoration: none;\n\n  &:hover {\n    color: #ff6b01;\n  }\n`;\n","import { useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { GiFilmSpool } from 'react-icons/gi';\nimport { StyledList, StyledListItem, StyledLink } from \"./MoviesList.styled\";\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <StyledList>\n      {movies.map(movie => (\n        <StyledListItem key={movie.id}>\n          <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            <GiFilmSpool style={{ width: 15, height: 15, marginRight: '10px'}} />\n            {movie.title}\n          </StyledLink>\n        </StyledListItem>\n      ))}\n    </StyledList>    \n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { PageTitle } from 'components/App/App.styled';\nimport { getTrendingMovies } from 'services/moviesApi';\n\nexport const HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setLoading(true);\n      try {\n        const { results } = await getTrendingMovies();\n        setMovies(results);\n      } catch (error) {\n        setError(error);\n        toast.error('Oops!...Something went wrong');\n      } finally {\n        setLoading(false);\n      }      \n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <>\n      <PageTitle>Trending today</PageTitle>\n      {loading && <Loader />}\n      {!error && movies.length !== 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b4f947b22bfa1d671304279be6575e1f';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getSearchMovies = async (query) => {\n  const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCast = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\n\n// ================================\n// список самых популярных фильмов на сегодня для создания коллекции на главной странице\n// https://api.themoviedb.org/3/trending/movie/week?api_key=b4f947b22bfa1d671304279be6575e1f\n\n// поиск кинофильма по ключевому слову на странице фильмов\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&query=query&page=1\n\n// запрос полной информации о фильме для страницы кинофильма\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>\n\n// запрос информации о актёрском составе для страницы кинофильма\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>\n\n// запрос обзоров для страницы кинофильма\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1"],"names":["LoaderWrapper","styled","Loader","color","height","width","StyledList","StyledListItem","StyledLink","Link","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","style","marginRight","title","HomePage","useState","setMovies","loading","setLoading","error","setError","useEffect","fetchMovies","getTrendingMovies","results","toast","length","axios","API_KEY","response","data","getSearchMovies","query","getMovieDetails","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}